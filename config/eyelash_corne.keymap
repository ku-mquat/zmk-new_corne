#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <17 23>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&mt TAB GRAVE                &kp Q  &kp W  &kp E               &kp R        &kp T                                  &kp UP                &kp Y      &kp U            &kp I        &kp O    &kp P     &kp BSPC
&kp LEFT_CONTROL             &kp A  &kp S  &kp D               &kp F        &kp G                        &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J            &kp K        &kp L    &kp SEMI  &kp ENTER
&mt LEFT_SHIFT LEFT_COMMAND  &kp Z  &kp X  &kp C               &kp V        &kp B           &kp SPACE              &kp DOWN              &kp N      &kp M            &kp COMMA    &kp DOT  &kp FSLH  &kp TAB
                                           &lt 3 LEFT_CONTROL  &lt 1 SPACE  &lt 2 LEFT_ALT                                               &lt 2 SQT  &lt 1 BACKSLASH  &lt 3 MINUS
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp GRAVE       &kp N1        &kp N2          &kp N3           &kp N4           &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8    &kp N9    &kp N0     &kp DELETE
&trans          &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans           &trans           &trans    &kp UP    &trans     &trans
&kp LEFT_SHIFT  &trans        &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_SPI  &rgb_ug RGB_SAD  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
                                              &trans           &trans           &trans                                                                          &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE  &kp EXCL      &kp AT        &kp HASH  &kp DLLR   &kp PRCNT                        &kp C_VOLUME_UP                &kp CARET   &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DEL
&kp TILDE  &bt BT_CLR    &trans        &trans    &mkp RCLK  &mkp MB4             &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT  &kp MINUS   &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans     &out OUT_USB  &out OUT_BLE  &none     &none      &mkp MB5   &trans                &kp C_VOLUME_DOWN              &kp UNDER   &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                       &trans    &trans     &kp SPACE                                                       &kp C_MUTE  &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                                         &mmv MOVE_UP                     &kp F6           &kp F7           &kp F8           &kp F9           &kp F10  &kp F11
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &trans   &kp F12
&trans  &trans           &trans           &trans           &sys_reset       &bootloader      &kp C_MUTE                    &mmv MOVE_DOWN                   &bootloader      &sys_reset       &trans           &trans           &trans   &trans
                                          &trans           &trans           &trans                                                                          &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
